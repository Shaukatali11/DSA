Find the total occurance of element using Binary search :

#include<bits/stdc++.h>
using namespace std;

===> linear search ---> O(n)
// void totaloccurance(int arr[],int s,int key){
//   int count=0;
//   for(int i=0;i<s;i++){
//     if(arr[i]==key){
//       count++;
//     }
//   }
//   cout<<count;
// }

===> Bianry search ---> O(logn)

int firstoccurance(int arr[],int s,int key){
  int start=0;
  int end=s-1;
  int ans;
  while(start<end){
    int mid=start+(end-start)/2;
    if(arr[mid]==key){
      ans=mid;
      end=mid-1;
    }else if(arr[mid]<key){
      start=mid+1;
    }else{
      end=mid;
    }
  }
  return ans;
}

int lastoccurance(int arr[],int s,int key){
  int start=0;
  int end=s-1;
  int ans;
  while(start<end){
    int mid=start+(end-start)/2;
    if(arr[mid]==key){
      ans=mid;
      start=mid+1;
    }else if(arr[mid]<key){
      start=mid+1;
    }else{
      end=mid;
    }
  }
  return ans;
}

void totaloccurance(int arr[],int s,int key){
  int first=firstoccurance(arr,s,key);
  int last=lastoccurance(arr,s,key);

  cout<<(last-first+1);

}
int main(){
  int arr[]={2,3,4,5,5,5,5,6,7,8,9};
  int s=sizeof(arr)/sizeof(arr[0]);
  int key=5;
  totaloccurance(arr,s,key);
}
