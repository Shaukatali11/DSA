5. Longest Palindromic Substring


#include<bits/stdc++.h>
using namespace std;

bool isPal(const string& s, int i, int j) {
    while (i < j) {
        if (s[i] != s[j]) {
            return false;
        }
        i++;
        j--;
    }
    return true;
}

string longestPalindrom(const string& str, int s) {
    int maxLen = 0;
    int start = 0;
    for (int i = 0; i < s; i++) {
        for (int j = i; j < s; j++) {
            if (isPal(str, i, j)) {
                if (j - i + 1 > maxLen) {
                    maxLen = j - i + 1;
                    start = i;
                }
            }
        }
    }
    return str.substr(start, maxLen);
}

int main() {
    string str = "babad";
    int s = str.size();
    cout << longestPalindrom(str, s) << endl;
    return 0;
}
