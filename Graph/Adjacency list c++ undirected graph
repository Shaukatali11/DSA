==> Adjacency list c++ undirected and unweighted graph:-

#include<bits/stdc++.h>
using namespace std;

int main(){
  int vertex,edges;
  cin>>vertex>>edges;
  vector<int>adjlist[vertex];
  int u,v;
  for(int i=0; i<edges;i++){
    cin>>u>>v;
    adjlist[u].push_back(v);
    adjlist[v].push_back(u);
  }



  for(int i=0; i<vertex;i++){
      cout<<i<<"->";
        
    for(int j=0; j<adjlist[i].size();j++){
        
        cout<<adjlist[i][j]<<" ";
    }
    cout<<endl;

  }
  return 0;
}



==> Adjacency list c++ undirected and weighted graph:-

#include<bits/stdc++.h>
using namespace std;

int main(){
  int vertex,edges;
  cin>>vertex>>edges;
  vector<pair<int,int> >adjlist[vertex];
  int u,v,weight;
  for(int i=0; i<edges;i++){
    cin>>u>>v;
    adjlist[u].push_back(make_pair(v,weight));
    adjlist[v].push_back(make_pair(u,weight));
  }



  for(int i=0; i<vertex;i++){
      cout<<i<<"->";
        
    for(int j=0; j<adjlist[i].size();j++){
        
        cout<<adjlist[i][j].first<<" "<<adjlist[i][j].second<<" ";
    }
    cout<<endl;

  }
  return 0;
}
