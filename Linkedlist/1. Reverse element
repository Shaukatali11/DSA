Leetcode 206. Reverse Linked List

Given the head of a singly linked list, reverse the list, and return the reversed list.

Test case 1:-
Input: head = [1,2,3,4,5]
Output: [5,4,3,2,1]

Test case 2:-
Input: head = [1,2]
Output: [2,1]

Solution:-

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */

Solution 1:-

class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        if(head==NULL || head->next==NULL) return head;

        ListNode* rest = reverseList(head->next);
        head->next->next=head;
        head->next=NULL;
        return rest;
        
    }
};


Solution 2 :-

class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        vector<int>ans;
        ListNode* temp=head;
        while(temp!=NULL){
            ans.push_back(temp->val);
            temp=temp->next;
        }
        temp=head;
        int i=ans.size()-1;
        while(temp!=NULL){
            temp->val=ans[i];
            i--;
            temp=temp->next;
        }
        return head;
    }
};
